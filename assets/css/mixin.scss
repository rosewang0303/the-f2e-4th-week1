// rwd: break point
@mixin screenLG {
    @media screen and (max-width: $breakpoint-lg){
        @content;
    }
}
@mixin screenMD {
    @media screen and (max-width: $breakpoint-md){
        @content;
    }
}
@mixin screenSM {
    @media screen and (max-width: $breakpoint-sm){
        @content;
    }
}

/*
    text stroke

    @param color: storke color (default: $secondary)
    @param width: stroke width (default: 3px)
*/
@mixin textStroke($color: $secondary, $width: 3px) {
    z-index: 0;
    &::before {
        content: attr(data-storke);
        position: absolute;
        z-index: -1;
        -webkit-text-stroke: $width $color;
        text-stroke: $width $color;
    }
}

// align
@mixin flexCenterH {
    display: flex;
    align-items: center;
}
@mixin flexCenter {
    display: flex;
    align-items: center;
    justify-content: center;
}

// button
button {
    cursor: pointer;
    font-family: 'Cubic';
}
@mixin buttonSM {
    width: 104px;
    height: 35px;
    @include flexCenter;
    font-weight: 400;
    font-size: 16px;
    line-height: 19px;
    background-color: $white;
    color: $primary;
    &:hover {
        transform: translate(5px, 5px);
        &:before,
        &:after {
            content: '';
            background-color: $tertiary;
            display: block;
            position: absolute;
            transition: 0.5s all ease;
        }
        &:before {
            left: -5px;
            top: -2.5px;
            width: 5px;
            height: 100%;
            transform: skewY(45deg);
        }
        &:after {
            left: -2.5px;
            top: -5px;
            width: 100%;
            height: 5px;
            transform: skewX(45deg);
        }
    }
    &:focus {
        background-color: $white;
        color: $secondary;
        transform: translate(0px, 0px);
        &:before,
        &:after {
            display: none;
        }
    }
    &:disabled {
        background-color: $light-gray;
        color: white;
    }
}

/* animation */

// text typing
@keyframes typing {
    from { width: 0 }
}
@mixin animateTyping($width: 6, $loop: true) {
    width: #{$width}em;
    overflow: hidden;
    white-space: nowrap;
    @if $loop == true {
        animation: typing 3s steps($width * 2) infinite;
    } @else {
        animation: typing 3s steps($width * 2);
    }
}